// <auto-generated />
namespace Macaron.Functional;

partial class Either
{
    public static Either<TLeft, TResult> Map2<TLeft, TRight1, TRight2, TResult>(
        Func<TRight1, TRight2, TResult> fn,
        Either<TLeft, TRight1> either1,
        Either<TLeft, TRight2> either2
    )
    {
        return Either.Right<TLeft, Func<TRight1, TRight2, TResult>>(fn).Apply(either1, either2);
    }

    public static Either<TLeft, TResult> Map3<TLeft, TRight1, TRight2, TRight3, TResult>(
        Func<TRight1, TRight2, TRight3, TResult> fn,
        Either<TLeft, TRight1> either1,
        Either<TLeft, TRight2> either2,
        Either<TLeft, TRight3> either3
    )
    {
        return Either.Right<TLeft, Func<TRight1, TRight2, TRight3, TResult>>(fn).Apply(either1, either2, either3);
    }

    public static Either<TLeft, TResult> Map4<TLeft, TRight1, TRight2, TRight3, TRight4, TResult>(
        Func<TRight1, TRight2, TRight3, TRight4, TResult> fn,
        Either<TLeft, TRight1> either1,
        Either<TLeft, TRight2> either2,
        Either<TLeft, TRight3> either3,
        Either<TLeft, TRight4> either4
    )
    {
        return Either.Right<TLeft, Func<TRight1, TRight2, TRight3, TRight4, TResult>>(fn).Apply(either1, either2, either3, either4);
    }

    public static Either<TLeft, TResult> Map5<TLeft, TRight1, TRight2, TRight3, TRight4, TRight5, TResult>(
        Func<TRight1, TRight2, TRight3, TRight4, TRight5, TResult> fn,
        Either<TLeft, TRight1> either1,
        Either<TLeft, TRight2> either2,
        Either<TLeft, TRight3> either3,
        Either<TLeft, TRight4> either4,
        Either<TLeft, TRight5> either5
    )
    {
        return Either.Right<TLeft, Func<TRight1, TRight2, TRight3, TRight4, TRight5, TResult>>(fn).Apply(either1, either2, either3, either4, either5);
    }

    public static Either<TLeft, TResult> Map6<TLeft, TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TResult>(
        Func<TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TResult> fn,
        Either<TLeft, TRight1> either1,
        Either<TLeft, TRight2> either2,
        Either<TLeft, TRight3> either3,
        Either<TLeft, TRight4> either4,
        Either<TLeft, TRight5> either5,
        Either<TLeft, TRight6> either6
    )
    {
        return Either.Right<TLeft, Func<TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TResult>>(fn).Apply(either1, either2, either3, either4, either5, either6);
    }

    public static Either<TLeft, TResult> Map7<TLeft, TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TRight7, TResult>(
        Func<TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TRight7, TResult> fn,
        Either<TLeft, TRight1> either1,
        Either<TLeft, TRight2> either2,
        Either<TLeft, TRight3> either3,
        Either<TLeft, TRight4> either4,
        Either<TLeft, TRight5> either5,
        Either<TLeft, TRight6> either6,
        Either<TLeft, TRight7> either7
    )
    {
        return Either.Right<TLeft, Func<TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TRight7, TResult>>(fn).Apply(either1, either2, either3, either4, either5, either6, either7);
    }

    public static Either<TLeft, TResult> Map8<TLeft, TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TRight7, TRight8, TResult>(
        Func<TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TRight7, TRight8, TResult> fn,
        Either<TLeft, TRight1> either1,
        Either<TLeft, TRight2> either2,
        Either<TLeft, TRight3> either3,
        Either<TLeft, TRight4> either4,
        Either<TLeft, TRight5> either5,
        Either<TLeft, TRight6> either6,
        Either<TLeft, TRight7> either7,
        Either<TLeft, TRight8> either8
    )
    {
        return Either.Right<TLeft, Func<TRight1, TRight2, TRight3, TRight4, TRight5, TRight6, TRight7, TRight8, TResult>>(fn).Apply(either1, either2, either3, either4, either5, either6, either7, either8);
    }

}
