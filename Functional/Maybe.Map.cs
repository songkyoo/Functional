// <auto-generated />
using System.Runtime.CompilerServices;

namespace Macaron.Functional;

partial class Maybe
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Maybe<TResult> Map2<T1, T2, TResult>(
        Func<T1, T2, TResult> fn,
        Maybe<T1> maybe1,
        Maybe<T2> maybe2
    )
    {
        return Maybe.Just(fn).Apply(maybe1, maybe2);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Maybe<TResult> Map3<T1, T2, T3, TResult>(
        Func<T1, T2, T3, TResult> fn,
        Maybe<T1> maybe1,
        Maybe<T2> maybe2,
        Maybe<T3> maybe3
    )
    {
        return Maybe.Just(fn).Apply(maybe1, maybe2, maybe3);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Maybe<TResult> Map4<T1, T2, T3, T4, TResult>(
        Func<T1, T2, T3, T4, TResult> fn,
        Maybe<T1> maybe1,
        Maybe<T2> maybe2,
        Maybe<T3> maybe3,
        Maybe<T4> maybe4
    )
    {
        return Maybe.Just(fn).Apply(maybe1, maybe2, maybe3, maybe4);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Maybe<TResult> Map5<T1, T2, T3, T4, T5, TResult>(
        Func<T1, T2, T3, T4, T5, TResult> fn,
        Maybe<T1> maybe1,
        Maybe<T2> maybe2,
        Maybe<T3> maybe3,
        Maybe<T4> maybe4,
        Maybe<T5> maybe5
    )
    {
        return Maybe.Just(fn).Apply(maybe1, maybe2, maybe3, maybe4, maybe5);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Maybe<TResult> Map6<T1, T2, T3, T4, T5, T6, TResult>(
        Func<T1, T2, T3, T4, T5, T6, TResult> fn,
        Maybe<T1> maybe1,
        Maybe<T2> maybe2,
        Maybe<T3> maybe3,
        Maybe<T4> maybe4,
        Maybe<T5> maybe5,
        Maybe<T6> maybe6
    )
    {
        return Maybe.Just(fn).Apply(maybe1, maybe2, maybe3, maybe4, maybe5, maybe6);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Maybe<TResult> Map7<T1, T2, T3, T4, T5, T6, T7, TResult>(
        Func<T1, T2, T3, T4, T5, T6, T7, TResult> fn,
        Maybe<T1> maybe1,
        Maybe<T2> maybe2,
        Maybe<T3> maybe3,
        Maybe<T4> maybe4,
        Maybe<T5> maybe5,
        Maybe<T6> maybe6,
        Maybe<T7> maybe7
    )
    {
        return Maybe.Just(fn).Apply(maybe1, maybe2, maybe3, maybe4, maybe5, maybe6, maybe7);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Maybe<TResult> Map8<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(
        Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> fn,
        Maybe<T1> maybe1,
        Maybe<T2> maybe2,
        Maybe<T3> maybe3,
        Maybe<T4> maybe4,
        Maybe<T5> maybe5,
        Maybe<T6> maybe6,
        Maybe<T7> maybe7,
        Maybe<T8> maybe8
    )
    {
        return Maybe.Just(fn).Apply(maybe1, maybe2, maybe3, maybe4, maybe5, maybe6, maybe7, maybe8);
    }

}
