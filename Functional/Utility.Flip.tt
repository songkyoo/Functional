<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ parameter type="System.Int32" name="MaxCount" #>
// <auto-generated />
namespace Macaron.Functional;

partial class Utility
{
<# for (int i = 2; i <= MaxCount; i++) { #>
    public static Action<T2, T1<# for (int j = 3; j <= i; j++) { #>, T<#= j #><# } #>> Flip<<# for (int j = 1; j < i; j++) { #>T<#= j #>, <# } #>T<#= i #>>(
        Action<<# for (int j = 1; j < i; j++) { #>T<#= j #>, <# } #>T<#= i #>> action
    )
    {
        return (<# for (int j = 1; j < i; j++) { #>arg<#= j #>, <# } #> arg<#= i #>) => action(arg2, arg1<# for (int j = 3; j <= i; j++) { #>, arg<#= j #><# } #>);
    }

    public static Func<T2, T1<# for (int j = 3; j <= i; j++) { #>, T<#= j #><# } #>, TResult> Flip<<# for (int j = 1; j < i; j++) { #>T<#= j #>, <# } #>T<#= i #>, TResult>(
        Func<<# for (int j = 1; j < i; j++) { #>T<#= j #>, <# } #>T<#= i #>, TResult> fn
    )
    {
        return (<# for (int j = 1; j < i; j++) { #>arg<#= j #>, <# } #> arg<#= i #>) => fn(arg2, arg1<# for (int j = 3; j <= i; j++) { #>, arg<#= j #><# } #>);
    }

<# } // end for i #>
}
