// <auto-generated />
using System.Runtime.CompilerServices;

namespace Macaron.Functional;

partial class Utility
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action<(T1, T2)> ToTupled<T1, T2>(
        Action<T1, T2> action
    )
    {
        return tuple => action(
            tuple.Item1,
            tuple.Item2
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<(T1, T2), TResult> ToTupled<T1, T2, TResult>(
        Func<T1, T2, TResult> fn
    )
    {
        return tuple => fn(
            tuple.Item1,
            tuple.Item2
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action<(T1, T2, T3)> ToTupled<T1, T2, T3>(
        Action<T1, T2, T3> action
    )
    {
        return tuple => action(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<(T1, T2, T3), TResult> ToTupled<T1, T2, T3, TResult>(
        Func<T1, T2, T3, TResult> fn
    )
    {
        return tuple => fn(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action<(T1, T2, T3, T4)> ToTupled<T1, T2, T3, T4>(
        Action<T1, T2, T3, T4> action
    )
    {
        return tuple => action(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<(T1, T2, T3, T4), TResult> ToTupled<T1, T2, T3, T4, TResult>(
        Func<T1, T2, T3, T4, TResult> fn
    )
    {
        return tuple => fn(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action<(T1, T2, T3, T4, T5)> ToTupled<T1, T2, T3, T4, T5>(
        Action<T1, T2, T3, T4, T5> action
    )
    {
        return tuple => action(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4,
            tuple.Item5
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<(T1, T2, T3, T4, T5), TResult> ToTupled<T1, T2, T3, T4, T5, TResult>(
        Func<T1, T2, T3, T4, T5, TResult> fn
    )
    {
        return tuple => fn(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4,
            tuple.Item5
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action<(T1, T2, T3, T4, T5, T6)> ToTupled<T1, T2, T3, T4, T5, T6>(
        Action<T1, T2, T3, T4, T5, T6> action
    )
    {
        return tuple => action(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4,
            tuple.Item5,
            tuple.Item6
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<(T1, T2, T3, T4, T5, T6), TResult> ToTupled<T1, T2, T3, T4, T5, T6, TResult>(
        Func<T1, T2, T3, T4, T5, T6, TResult> fn
    )
    {
        return tuple => fn(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4,
            tuple.Item5,
            tuple.Item6
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action<(T1, T2, T3, T4, T5, T6, T7)> ToTupled<T1, T2, T3, T4, T5, T6, T7>(
        Action<T1, T2, T3, T4, T5, T6, T7> action
    )
    {
        return tuple => action(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4,
            tuple.Item5,
            tuple.Item6,
            tuple.Item7
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<(T1, T2, T3, T4, T5, T6, T7), TResult> ToTupled<T1, T2, T3, T4, T5, T6, T7, TResult>(
        Func<T1, T2, T3, T4, T5, T6, T7, TResult> fn
    )
    {
        return tuple => fn(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4,
            tuple.Item5,
            tuple.Item6,
            tuple.Item7
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action<(T1, T2, T3, T4, T5, T6, T7, T8)> ToTupled<T1, T2, T3, T4, T5, T6, T7, T8>(
        Action<T1, T2, T3, T4, T5, T6, T7, T8> action
    )
    {
        return tuple => action(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4,
            tuple.Item5,
            tuple.Item6,
            tuple.Item7,
            tuple.Item8
        );
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<(T1, T2, T3, T4, T5, T6, T7, T8), TResult> ToTupled<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(
        Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> fn
    )
    {
        return tuple => fn(
            tuple.Item1,
            tuple.Item2,
            tuple.Item3,
            tuple.Item4,
            tuple.Item5,
            tuple.Item6,
            tuple.Item7,
            tuple.Item8
        );
    }

}
