// <auto-generated />
using System.Runtime.CompilerServices;

namespace Macaron.Functional;

partial class Utility
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static (T1, T2, T3) Append<T1, T2, T3>((T1, T2) tuple, T3 item)
    {
        return (tuple.Item1, tuple.Item2, item);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static (T1, T2, T3, T4) Append<T1, T2, T3, T4>((T1, T2, T3) tuple, T4 item)
    {
        return (tuple.Item1, tuple.Item2, tuple.Item3, item);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static (T1, T2, T3, T4, T5) Append<T1, T2, T3, T4, T5>((T1, T2, T3, T4) tuple, T5 item)
    {
        return (tuple.Item1, tuple.Item2, tuple.Item3, tuple.Item4, item);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static (T1, T2, T3, T4, T5, T6) Append<T1, T2, T3, T4, T5, T6>((T1, T2, T3, T4, T5) tuple, T6 item)
    {
        return (tuple.Item1, tuple.Item2, tuple.Item3, tuple.Item4, tuple.Item5, item);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static (T1, T2, T3, T4, T5, T6, T7) Append<T1, T2, T3, T4, T5, T6, T7>((T1, T2, T3, T4, T5, T6) tuple, T7 item)
    {
        return (tuple.Item1, tuple.Item2, tuple.Item3, tuple.Item4, tuple.Item5, tuple.Item6, item);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static (T1, T2, T3, T4, T5, T6, T7, T8) Append<T1, T2, T3, T4, T5, T6, T7, T8>((T1, T2, T3, T4, T5, T6, T7) tuple, T8 item)
    {
        return (tuple.Item1, tuple.Item2, tuple.Item3, tuple.Item4, tuple.Item5, tuple.Item6, tuple.Item7, item);
    }

}

