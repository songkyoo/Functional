<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ parameter type="System.Int32" name="MaxCount" #>
// <auto-generated />
namespace Macaron.Functional;

partial class Either
{
<# for (var i = 2; i <= MaxCount; i++) { #>
    public static Either<TLeft, TResult> Map<#= i #><TLeft, <# for (var j = 1; j <= i; j++) { #>TRight<#= j #>, <# } #>TResult>(
        Func<<# for (var j = 1; j <= i; j++) { #>TRight<#= j #>, <# } #>TResult> fn,
<# for (var j = 1; j < i; j++) { #>
        Either<TLeft, TRight<#= j #>> either<#= j #>,
<# } #>
        Either<TLeft, TRight<#= i #>> either<#= i #>
    )
    {
        return Either.Right<TLeft, Func<<# for (var j = 1; j <= i; j++) { #>TRight<#= j #>, <# } #>TResult>>(fn).Apply(<# for (var j = 1; j <= i; j++) { #>either<#= j #><# if (j < i) { #>, <# } #><# } #>);
    }

<# } #>
}
