// <auto-generated />
namespace Macaron.Functional;

partial class Extensions
{
    public static TResult Let<T, TResult>(
        this T self, Func<T, TResult> fn
    ) where T : notnull
    {
        return fn(self);
    }

    public static TResult Let<T, TArg1, TResult>(
        this T self, Func<T, TArg1, TResult> fn, TArg1 arg1
    ) where T : notnull
    {
        return fn(self, arg1);
    }

    public static TResult Let<T, TArg1, TArg2, TResult>(
        this T self, Func<T, TArg1, TArg2, TResult> fn, TArg1 arg1, TArg2 arg2
    ) where T : notnull
    {
        return fn(self, arg1, arg2);
    }

    public static TResult Let<T, TArg1, TArg2, TArg3, TResult>(
        this T self, Func<T, TArg1, TArg2, TArg3, TResult> fn, TArg1 arg1, TArg2 arg2, TArg3 arg3
    ) where T : notnull
    {
        return fn(self, arg1, arg2, arg3);
    }

    public static TResult Let<T, TArg1, TArg2, TArg3, TArg4, TResult>(
        this T self, Func<T, TArg1, TArg2, TArg3, TArg4, TResult> fn, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4
    ) where T : notnull
    {
        return fn(self, arg1, arg2, arg3, arg4);
    }

    public static TResult Let<T, TArg1, TArg2, TArg3, TArg4, TArg5, TResult>(
        this T self, Func<T, TArg1, TArg2, TArg3, TArg4, TArg5, TResult> fn, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5
    ) where T : notnull
    {
        return fn(self, arg1, arg2, arg3, arg4, arg5);
    }

    public static TResult Let<T, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult>(
        this T self, Func<T, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult> fn, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5, TArg6 arg6
    ) where T : notnull
    {
        return fn(self, arg1, arg2, arg3, arg4, arg5, arg6);
    }

    public static TResult Let<T, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult>(
        this T self, Func<T, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult> fn, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5, TArg6 arg6, TArg7 arg7
    ) where T : notnull
    {
        return fn(self, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }

}
