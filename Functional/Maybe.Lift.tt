<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ parameter type="System.Int32" name="MaxCount" #>
// <auto-generated />
namespace Macaron.Functional;

partial class Maybe
{
<# for (int i = 2; i <= MaxCount; i++) { #>
    public static Func<<# for (int j = 1; j <= i; j++) { #>Maybe<T<#= j #>>, <# } #> Maybe<TResult>> Lift<<# for (int j = 1; j <= i; j++) { #>T<#= j #>, <# } #>TResult>(
        Func<<# for (int j = 1; j <= i; j++) { #>T<#= j #>, <# } #>TResult> fn
    )
    {
        return (<# for (int j = 1; j <= i; j++) { #>maybe<#= j #><# if (j < i) { #>, <# } #> <# } #>) => Maybe.Just(fn).Apply(<# for (int j = 1; j <= i; j++) { #>maybe<#= j #><# if (j < i) { #>, <# } #> <# } #>);
    }

<# } #>
}