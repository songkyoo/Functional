// <auto-generated />
using System.Runtime.CompilerServices;

namespace Macaron.Functional;

partial class Utility
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action Bind<T1>(
        Action<T1> action, T1 arg1
    )
    {
        return () => action(arg1);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<TResult> Bind<T1, TResult>(
        Func<T1, TResult> fn, T1 arg1
    )
    {
        return () => fn(arg1);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action Bind<T1, T2>(
        Action<T1, T2> action, T1 arg1, T2 arg2
    )
    {
        return () => action(arg1, arg2);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<TResult> Bind<T1, T2, TResult>(
        Func<T1, T2, TResult> fn, T1 arg1, T2 arg2
    )
    {
        return () => fn(arg1, arg2);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action Bind<T1, T2, T3>(
        Action<T1, T2, T3> action, T1 arg1, T2 arg2, T3 arg3
    )
    {
        return () => action(arg1, arg2, arg3);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<TResult> Bind<T1, T2, T3, TResult>(
        Func<T1, T2, T3, TResult> fn, T1 arg1, T2 arg2, T3 arg3
    )
    {
        return () => fn(arg1, arg2, arg3);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action Bind<T1, T2, T3, T4>(
        Action<T1, T2, T3, T4> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4
    )
    {
        return () => action(arg1, arg2, arg3, arg4);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<TResult> Bind<T1, T2, T3, T4, TResult>(
        Func<T1, T2, T3, T4, TResult> fn, T1 arg1, T2 arg2, T3 arg3, T4 arg4
    )
    {
        return () => fn(arg1, arg2, arg3, arg4);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action Bind<T1, T2, T3, T4, T5>(
        Action<T1, T2, T3, T4, T5> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5
    )
    {
        return () => action(arg1, arg2, arg3, arg4, arg5);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<TResult> Bind<T1, T2, T3, T4, T5, TResult>(
        Func<T1, T2, T3, T4, T5, TResult> fn, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5
    )
    {
        return () => fn(arg1, arg2, arg3, arg4, arg5);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action Bind<T1, T2, T3, T4, T5, T6>(
        Action<T1, T2, T3, T4, T5, T6> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6
    )
    {
        return () => action(arg1, arg2, arg3, arg4, arg5, arg6);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<TResult> Bind<T1, T2, T3, T4, T5, T6, TResult>(
        Func<T1, T2, T3, T4, T5, T6, TResult> fn, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6
    )
    {
        return () => fn(arg1, arg2, arg3, arg4, arg5, arg6);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action Bind<T1, T2, T3, T4, T5, T6, T7>(
        Action<T1, T2, T3, T4, T5, T6, T7> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7
    )
    {
        return () => action(arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<TResult> Bind<T1, T2, T3, T4, T5, T6, T7, TResult>(
        Func<T1, T2, T3, T4, T5, T6, T7, TResult> fn, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7
    )
    {
        return () => fn(arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Action Bind<T1, T2, T3, T4, T5, T6, T7, T8>(
        Action<T1, T2, T3, T4, T5, T6, T7, T8> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8
    )
    {
        return () => action(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static Func<TResult> Bind<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(
        Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> fn, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8
    )
    {
        return () => fn(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }

}
