// <auto-generated />
namespace Macaron.Functional;

partial class Utility
{
    public static Func<T1, T3> Pipe<T1, T2, T3>(
        Func<T1, T2> fn1,
        Func<T2, T3> fn2
    )
    {
        return value =>
        {
            var result1 = fn1(value);
            var result2 = fn2(result1);

            return result2;
        };
    }

    public static Func<T1, T4> Pipe<T1, T2, T3, T4>(
        Func<T1, T2> fn1,
        Func<T2, T3> fn2,
        Func<T3, T4> fn3
    )
    {
        return value =>
        {
            var result1 = fn1(value);
            var result2 = fn2(result1);
            var result3 = fn3(result2);

            return result3;
        };
    }

    public static Func<T1, T5> Pipe<T1, T2, T3, T4, T5>(
        Func<T1, T2> fn1,
        Func<T2, T3> fn2,
        Func<T3, T4> fn3,
        Func<T4, T5> fn4
    )
    {
        return value =>
        {
            var result1 = fn1(value);
            var result2 = fn2(result1);
            var result3 = fn3(result2);
            var result4 = fn4(result3);

            return result4;
        };
    }

    public static Func<T1, T6> Pipe<T1, T2, T3, T4, T5, T6>(
        Func<T1, T2> fn1,
        Func<T2, T3> fn2,
        Func<T3, T4> fn3,
        Func<T4, T5> fn4,
        Func<T5, T6> fn5
    )
    {
        return value =>
        {
            var result1 = fn1(value);
            var result2 = fn2(result1);
            var result3 = fn3(result2);
            var result4 = fn4(result3);
            var result5 = fn5(result4);

            return result5;
        };
    }

    public static Func<T1, T7> Pipe<T1, T2, T3, T4, T5, T6, T7>(
        Func<T1, T2> fn1,
        Func<T2, T3> fn2,
        Func<T3, T4> fn3,
        Func<T4, T5> fn4,
        Func<T5, T6> fn5,
        Func<T6, T7> fn6
    )
    {
        return value =>
        {
            var result1 = fn1(value);
            var result2 = fn2(result1);
            var result3 = fn3(result2);
            var result4 = fn4(result3);
            var result5 = fn5(result4);
            var result6 = fn6(result5);

            return result6;
        };
    }

    public static Func<T1, T8> Pipe<T1, T2, T3, T4, T5, T6, T7, T8>(
        Func<T1, T2> fn1,
        Func<T2, T3> fn2,
        Func<T3, T4> fn3,
        Func<T4, T5> fn4,
        Func<T5, T6> fn5,
        Func<T6, T7> fn6,
        Func<T7, T8> fn7
    )
    {
        return value =>
        {
            var result1 = fn1(value);
            var result2 = fn2(result1);
            var result3 = fn3(result2);
            var result4 = fn4(result3);
            var result5 = fn5(result4);
            var result6 = fn6(result5);
            var result7 = fn7(result6);

            return result7;
        };
    }

    public static Func<T1, T9> Pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9>(
        Func<T1, T2> fn1,
        Func<T2, T3> fn2,
        Func<T3, T4> fn3,
        Func<T4, T5> fn4,
        Func<T5, T6> fn5,
        Func<T6, T7> fn6,
        Func<T7, T8> fn7,
        Func<T8, T9> fn8
    )
    {
        return value =>
        {
            var result1 = fn1(value);
            var result2 = fn2(result1);
            var result3 = fn3(result2);
            var result4 = fn4(result3);
            var result5 = fn5(result4);
            var result6 = fn6(result5);
            var result7 = fn7(result6);
            var result8 = fn8(result7);

            return result8;
        };
    }

}
